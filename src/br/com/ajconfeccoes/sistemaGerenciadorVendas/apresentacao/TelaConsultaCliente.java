/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.ajconfeccoes.sistemaGerenciadorVendas.apresentacao;

import br.com.ajconfeccoes.sistemaGerenciadorVendas.apresentacao.classesUtil.CursorUtil;
import br.com.ajconfeccoes.sistemaGerenciadorVendas.apresentacao.classesUtil.MensagemTela;
import br.com.ajconfeccoes.sistemaGerenciadorVendas.apresentacao.excessoes.ArgumentInvalidExeception;
import br.com.ajconfeccoes.sistemaGerenciadorVendas.entidade.Cliente;
import br.com.ajconfeccoes.sistemaGerenciadorVendas.entidade.Usuario;
import br.com.ajconfeccoes.sistemaGerenciadorVendas.negocio.ClienteBO;
import br.com.ajconfeccoes.sistemaGerenciadorVendas.negocio.UsuarioBO;
import java.awt.Cursor;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author arley
 */
public class TelaConsultaCliente extends Tela {
    
    List<Cliente> clientes = new ArrayList<>();
    TelaPrincipal telaPrincipal = null;
    
    public TelaConsultaCliente(TelaPrincipal telaPrincipal) {
        this.setCursor(CursorUtil.getCursor(3));
        initComponents();  
        buscarTodosCliente();
        this.telaPrincipal = telaPrincipal;
    }

    
    public void buscarTodosCliente(){
        
        try{         
            ClienteBO clienteBO = new ClienteBO();
            clientes = clienteBO.buscarTodos();
            carregarDadosTabela();
        }catch(Exception e){
            MensagemTela.exibirMensagemErro(this, "Erro desconhecido. Contate com administrador", "Consultar Cliente");
        }finally{
            this.setCursor(CursorUtil.getCursor(0));
        }
    }
    
    public void carregarDadosTabela(){
        Model modelo = new Model();
        this.tblClientes.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlClientes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        lblConsultarClientes = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setTitle("Consulta Cliente");

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblClientes);

        lblConsultarClientes.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblConsultarClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ajconfeccoes/sistemaGerenciadorVendas/apresentacao/imagens/group.png"))); // NOI18N
        lblConsultarClientes.setText("Clientes do Sistema - Empresa AJ Confeccções ");

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ajconfeccoes/sistemaGerenciadorVendas/apresentacao/imagens/user_edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setPreferredSize(new java.awt.Dimension(60, 30));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ajconfeccoes/sistemaGerenciadorVendas/apresentacao/imagens/user_delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setPreferredSize(new java.awt.Dimension(60, 30));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlClientesLayout = new javax.swing.GroupLayout(pnlClientes);
        pnlClientes.setLayout(pnlClientesLayout);
        pnlClientesLayout.setHorizontalGroup(
            pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
                    .addGroup(pnlClientesLayout.createSequentialGroup()
                        .addGroup(pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblConsultarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlClientesLayout.createSequentialGroup()
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlClientesLayout.setVerticalGroup(
            pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConsultarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlClientesLayout.createSequentialGroup()
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        this.setCursor(CursorUtil.getCursor(3));
        int linhaSelecionada = this.tblClientes.getSelectedRow();
        
        if(linhaSelecionada != -1){
             try {
                 Cliente clienteSelecionado = this.clientes.get(linhaSelecionada);  
                 TelaEditarDadosCliente telaEditarDadosCliente = new TelaEditarDadosCliente(this, clienteSelecionado);
                 telaPrincipal.addComponenteTela(telaEditarDadosCliente);
                 telaEditarDadosCliente.setMaximum(true);
                 telaEditarDadosCliente.setVisible(true);
             } catch (PropertyVetoException ex) {
                 Logger.getLogger(TelaConsultaUsuario.class.getName()).log(Level.SEVERE, null, ex);
             }finally{
                 this.setCursor(CursorUtil.getCursor(0));
             }
        }else{
          this.setCursor(CursorUtil.getCursor(0));
          String mensagem = "Nenhum cliente selecionado.";
          JOptionPane.showMessageDialog(this, mensagem, "Alterar cliente", JOptionPane.INFORMATION_MESSAGE);  
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        
        int linhaSelecionada = this.tblClientes.getSelectedRow();
        if(linhaSelecionada != -1){
            Cliente clienteSelecionado = this.clientes.get(linhaSelecionada);

            int resposta;
            String mensagem = "Deseja excluir cliente " + clienteSelecionado.getNome() + " ?";
            String titulo = "Excluir cliente";
            resposta = JOptionPane.showConfirmDialog(null, mensagem, titulo, JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                try {
                    CursorUtil.getCursor(3);
                    ClienteBO clienteBO = new ClienteBO();
                    clienteBO.deletarCliente(clienteSelecionado);
                    this.buscarTodosCliente();
                    MensagemTela.exibirMensagemSucesso(this, "Dados excluidos com sucesso!", "Excluir cliente");                
                }catch (ArgumentInvalidExeception aie){
                   MensagemTela.exibirMensagemErro(this, aie.getMessage(), "Excluir cliente"); 
                } catch (Exception e) {
                    mensagem = "Erro desconhecido. Entre em contato com o administrador do sistema.";
                    MensagemTela.exibirMensagemErro(this, mensagem, "Excluir cliente");
                }finally{
                    CursorUtil.getCursor(0);
                }
            }
            else{
                MensagemTela.exibirMensagemSucesso(this, "Dados não excluidos", "Excluir cliente");
            }
        }else{
          String mensagem = "Nenhum cliente selecionado.";
          JOptionPane.showMessageDialog(this, mensagem, "Excluir cliente", JOptionPane.INFORMATION_MESSAGE);  
        }
    }//GEN-LAST:event_btnExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblConsultarClientes;
    private javax.swing.JPanel pnlClientes;
    private javax.swing.JTable tblClientes;
    // End of variables declaration//GEN-END:variables

    public class Model extends AbstractTableModel{

        @Override
        public int getRowCount() {
            return clientes.size();
        }

        @Override
        public int getColumnCount() {
            return 7;
        }

        @Override
        public Object getValueAt(int linha, int coluna) {
            Cliente cliente = clientes.get(linha);
            if(coluna == 0){
                return cliente.getCpf();
            }else if(coluna == 1){
                return cliente.getRg();
            }else if(coluna == 2){
               return cliente.getNome();
            }else if(coluna == 3){
                return cliente.getIdade();
            }else if(coluna == 4){
                return cliente.getTelefone();
            }else if(coluna == 5){
                return cliente.getEndereco();
            }else{
                if(cliente.isStatus()){
                    return "Positivo";
                }else{
                    return "Negativo";
                }
            }
        }
        
        @Override
        public String getColumnName(int coluna){
            if(coluna == 0){
                return "CPF";
            }else if(coluna == 1){
                return "RG";
            }else if(coluna == 2){
               return "Nome"; 
            }else if(coluna == 3){
                return "Idade";
            }else if(coluna == 4){
                return "Telefone";
            }else if(coluna == 5){
                return "Endereço";
            }else{
                return "Situação";
            }
        }
    
    }

}
